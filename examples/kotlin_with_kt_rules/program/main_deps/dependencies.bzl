# Auto-generated by https://github.com/menny/bazel-mvn-deps


# Loading a drop-in replacement for native.http_file
load('@bazel_tools//tools/build_defs/repo:http.bzl', 'http_file')

# Repository rules macro to be run in the WORKSPACE file.
def generate_workspace_rules():
    # from com.github.salomonbrys.kotson:kotson:2.5.0
    http_file(name = 'com_github_salomonbrys_kotson__kotson__2_5_0',
        urls = ['https://repo1.maven.org/maven2/com/github/salomonbrys/kotson/kotson/2.5.0/kotson-2.5.0.jar'],
        downloaded_file_path = 'kotson-2.5.0.jar',
        sha256 = 'c94b68e7076620cd334907f2a3c87d63ef7fd500c2f200fbd46f9ee2c9c63501',
    )

    # from com.google.code.gson:gson:2.8.0
    http_file(name = 'com_google_code_gson__gson__2_8_0',
        urls = ['https://repo1.maven.org/maven2/com/google/code/gson/gson/2.8.0/gson-2.8.0.jar'],
        downloaded_file_path = 'gson-2.8.0.jar',
        sha256 = 'c6221763bd79c4f1c3dc7f750b5f29a0bb38b367b81314c4f71896e340c40825',
    )

    # from org.jetbrains.kotlin:kotlin-runtime:1.0.6
    http_file(name = 'org_jetbrains_kotlin__kotlin_runtime__1_0_6',
        urls = ['https://repo1.maven.org/maven2/org/jetbrains/kotlin/kotlin-runtime/1.0.6/kotlin-runtime-1.0.6.jar'],
        downloaded_file_path = 'kotlin-runtime-1.0.6.jar',
        sha256 = '59dcf4c5fb74f95b7c9405330b5b7f9d74dfef012bc11a9d51d6e0415e639b51',
    )

    # from org.jetbrains.kotlin:kotlin-stdlib:1.0.6
    http_file(name = 'org_jetbrains_kotlin__kotlin_stdlib__1_0_6',
        urls = ['https://repo1.maven.org/maven2/org/jetbrains/kotlin/kotlin-stdlib/1.0.6/kotlin-stdlib-1.0.6.jar'],
        downloaded_file_path = 'kotlin-stdlib-1.0.6.jar',
        sha256 = '38dd8d4e1bbff75e67d16b78d6fde1d55a7720172f099ea95135f2ec7996b11f',
    )


# Transitive rules macro to be run in the BUILD.bazel file.
# If you use kt_* rules, you MUST provide the correct rule implementation when call this macro, if you decide
# not to provide those implementations we'll try to use java_* rules.

# This is a help macro to handle Kotlin rules.
def kotlin_jar_support(name, deps, exports, runtime_deps, jar, kt_jvm_import=None, kt_jvm_library=None):
    #In case the developer did not provide a kt_* impl, we'll try to use java_*, should work
    if kt_jvm_import == None:
        native.java_import(name = name,
            jars = [jar],
            deps = deps,
            exports = exports,
            runtime_deps = runtime_deps,
        )
    else:
        kt_jvm_import(name = '{}_kotlin_jar'.format(name),
            jars = [jar],
        )
        kt_jvm_library(name = name,
            deps = deps + [':{}_kotlin_jar'.format(name)],
            exports = exports + [':{}_kotlin_jar'.format(name)],
            runtime_deps = runtime_deps,
        )

def generate_transitive_dependency_targets(kt_jvm_import=None, kt_jvm_library=None):
    # from com.github.salomonbrys.kotson:kotson:2.5.0
    native.alias(name = 'com_github_salomonbrys_kotson__kotson',
        actual = ':com_github_salomonbrys_kotson__kotson__2_5_0',
        visibility = ['//visibility:public'],
    )

    # from com.github.salomonbrys.kotson:kotson:2.5.0
    kotlin_jar_support(name = 'com_github_salomonbrys_kotson__kotson__2_5_0',
        deps = [
            ':com_google_code_gson__gson',
            ':org_jetbrains_kotlin__kotlin_stdlib',
        ],
        exports = [
            ':com_google_code_gson__gson',
            ':org_jetbrains_kotlin__kotlin_stdlib',
        ],
        runtime_deps = [],
        jar = '@com_github_salomonbrys_kotson__kotson__2_5_0//file',
        kt_jvm_import = kt_jvm_import,
        kt_jvm_library = kt_jvm_library,
    )

    # from com.google.code.gson:gson:2.8.0
    native.alias(name = 'com_google_code_gson__gson',
        actual = ':com_google_code_gson__gson__2_8_0',
        visibility = ['//visibility:public'],
    )

    # from com.google.code.gson:gson:2.8.0
    native.java_import(name = 'com_google_code_gson__gson__2_8_0',
        jars = ['@com_google_code_gson__gson__2_8_0//file'],
        tags = ['maven_coordinates=com.google.code.gson:gson:2.8.0'],
        licenses = ['notice'],
        deps = [],
        exports = [],
        runtime_deps = [],
    )

    # from org.jetbrains.kotlin:kotlin-runtime:1.0.6
    native.alias(name = 'org_jetbrains_kotlin__kotlin_runtime',
        actual = ':org_jetbrains_kotlin__kotlin_runtime__1_0_6',
        visibility = ['//visibility:public'],
    )

    # from org.jetbrains.kotlin:kotlin-runtime:1.0.6
    kotlin_jar_support(name = 'org_jetbrains_kotlin__kotlin_runtime__1_0_6',
        deps = [],
        exports = [],
        runtime_deps = [],
        jar = '@org_jetbrains_kotlin__kotlin_runtime__1_0_6//file',
        kt_jvm_import = kt_jvm_import,
        kt_jvm_library = kt_jvm_library,
    )

    # from org.jetbrains.kotlin:kotlin-stdlib:1.0.6
    native.alias(name = 'org_jetbrains_kotlin__kotlin_stdlib',
        actual = ':org_jetbrains_kotlin__kotlin_stdlib__1_0_6',
        visibility = ['//visibility:public'],
    )

    # from org.jetbrains.kotlin:kotlin-stdlib:1.0.6
    kotlin_jar_support(name = 'org_jetbrains_kotlin__kotlin_stdlib__1_0_6',
        deps = [':org_jetbrains_kotlin__kotlin_runtime'],
        exports = [':org_jetbrains_kotlin__kotlin_runtime'],
        runtime_deps = [],
        jar = '@org_jetbrains_kotlin__kotlin_stdlib__1_0_6//file',
        kt_jvm_import = kt_jvm_import,
        kt_jvm_library = kt_jvm_library,
    )


